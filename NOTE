# TODO
1) API 기능
- telegram
- 1건이라도 fail이면 NotifyResponse fail로 설정 (slack의 경우 여러 건 중 일부만 성공 가능)
- send retry?
- test code 추가 (LDAPTest 실패함)
- targetId={{ ..commonLabels.team}} 으로 설정하면 NullPointer exception 발생
- NotifyRequest -> Map으로 변경? (JsonHelper.getExpValue() 사용하기 위해)

2) 추후
- line, kakao sender?
- docker
- message에 generatorURL link 추가 기능
- /v1/notify status, stats? today notification count. notification counts by day
- send by async
- send defferred result?
- templates/users/new-user.html - form input font-size .875rem 설정이 안됨

# DONE
- webhook sender by post method (get method 완료)
- application.yml에서 expression 사용 가능한 필드
  * alertmanager.notificationId - alertmanager webhook의 모든 필드
  * webhook.url - NotifyRequest의 일부 필드
- mysql -> h2 변경
- UI notifications - slack 입력값 주소는 1개만 되는건가? 여러개 가능하나 사용성을 위해 1개만 설정하도록 권장함
- config - notificationId 값 expression으로 설정 (ex) 'team:{{ .commonLabels.team }}'
- prometheus alertmanager webhook 처리 - notificationId 처리
- target crud 기능. api 요청시 target target과 merge하여 전송하는 기능
- email sender
- notifyInternal 호출시 Exception 발생하면 처리가 중단되고 아래와 같은 response 응답 (http post시 java.net.SocketTimeoutException 발생 경우)
{"timestamp":"2020-01-10T08:55:19.686+0000","status":500,"error":"Internal Server Error","message":"I/O error on POST request for \"https://hooks.slack.com/services/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\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out","path":"/v1/notify"}
- Swagger 적용
  * https://www.baeldung.com/swagger-2-documentation-for-spring-rest-api
  * 접근: /swagger-ui.html
- Spring Boot form validation, Validation 실패시 입력값 유지
- Spring Boot REST + Test Controller
  * https://www.baeldung.com/building-a-restful-web-service-with-spring-and-java-based-configuration
  * https://spring.io/guides/gs/rest-service/
- Spring Data JPA CRUD
  * https://www.baeldung.com/spring-boot-crud-thymeleaf
- Thymeleaf layout 적용
  * https://dzone.com/articles/spring-boot-thymeleaf-template-decorator-using-thy
  * https://github.com/sanaulla123/samples/tree/master/thymeleaf-layout-dialect-boot
  * default layout: templates/layouts/layout.html 
  * example layout: templates/layouts/example.html
- MySQL 적용
  * https://spring.io/guides/gs/accessing-data-mysql/
  * application.properties 사용 - application.properties 내용을 application.yml에 기록하여 사용하면 mysql table 생성 안됨
- schema.sql, data.sql
  * https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
- User 페이지 디자인

# API
Request:
{
    "id": "send-0001",
    "title": "제목",
    "message": "[ON] SMONi-ap-dev03 [Memory used] 6685151232 > 15 [1 MIN PMon #56]",
    "phone": [ "01039084148", "0264074148" ],
    "email": [ "th.yun@sk.com" ],
    "slack": [
        { "channelKey": "T0NCP1206/B1YFAFY1Y/7dVfupdbAqdmdkvI1ASiXNvT" }
    ],
    "telegram": [ ],
    "line": [ ]
}

Response:
{
    "id": "send-0001",
    "result": true,
    "email": [
        {
            "id": "send-0001",
            "result": true
        }
    ],
    "slack": [
        {
            "id": "send-0001",
            "result": true
        }
    ],
    "webhook": [
        {
            "id": "send-0001",
            "result": true
        }
    ]
}

# Reference
https://dzone.com/articles/spring-boot-thymeleaf-template-decorator-using-thy
https://github.com/sanaulla123/samples/tree/master/thymeleaf-layout-dialect-boot
Bootstrap examples: album, starter-template, dashboard
